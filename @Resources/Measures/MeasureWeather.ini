[MeasureUnits]
; Sets units depending on status of #MetricUnits# (which is controlled by context menu options).
Measure=Calc
; 0: Imperial Units, 1: Metric Units
IfCondition=(#MetricUnits#=0)
IfTrueAction=[!SetVariable UnitTemp "F"][!SetOption MeterTemp MeasureName MeasureTempF][!SetOption MeterDay1High MeasureName MeasureDay1HighF][!SetOption MeterDay1Low MeasureName MeasureDay1LowF][!SetOption MeterDay2High MeasureName MeasureDay2HighF][!SetOption MeterDay2Low MeasureName MeasureDay2LowF][!SetOption MeterDay3High MeasureName MeasureDay3HighF][!SetOption MeterDay3Low MeasureName MeasureDay3LowF][!SetOption MeterDay4High MeasureName MeasureDay4HighF][!SetOption MeterDay4Low MeasureName MeasureDay4LowF][!SetOption MeterDay5High MeasureName MeasureDay5HighF][!SetOption MeterDay5Low MeasureName MeasureDay5LowF][!SetVariable UnitSpeed "mph"][!SetVariable UnitDistance "mi"][!SetVariable UnitPressure "in"][!UpdateMeterGroup UnitMeters]
IfFalseAction=[!SetVariable UnitTemp "C"][!SetOption MeterTemp MeasureName MeasureTempC][!SetOption MeterDay1High MeasureName MeasureDay1HighC][!SetOption MeterDay1Low MeasureName MeasureDay1LowC][!SetOption MeterDay2High MeasureName MeasureDay2HighC][!SetOption MeterDay2Low MeasureName MeasureDay2LowC][!SetOption MeterDay3High MeasureName MeasureDay3HighC][!SetOption MeterDay3Low MeasureName MeasureDay3LowC][!SetOption MeterDay4High MeasureName MeasureDay4HighC][!SetOption MeterDay4Low MeasureName MeasureDay4LowC][!SetOption MeterDay5High MeasureName MeasureDay5HighC][!SetOption MeterDay5Low MeasureName MeasureDay5LowC][!SetVariable UnitSpeed "km/h"][!SetVariable UnitDistance "km"][!SetVariable UnitPressure "mb"][!UpdateMeterGroup UnitMeters]
DynamicVariables=1
UpdateDivider=-1

[MeasureTimeFormat]
; Sets 12-hr or 24-hr time format depending on #24Hourtime# (which is controlled by context menu options).
Measure=Calc
; 0: 12-hr time format, 1: 24-hr time format
IfCondition=(#24HourTime#=0)
IfTrueAction=[!SetOption MeasureTime Format "%#I:%M %p"][!UpdateMeasure MeasureTime][!UpdateMeter MeterLocation][!SetOption MeterSunrise MeasureName MeasureSunrise12][!UpdateMeter MeterSunrise][!SetOption MeterSunset MeasureName MeasureSunset12][!UpdateMeter MeterSunset]
IfFalseAction=[!SetOption MeasureTime Format "%#H:%M"][!UpdateMeasure MeasureTime][!UpdateMeter MeterLocation][!SetOption MeterSunrise MeasureName MeasureSunrise24][!UpdateMeter MeterSunrise][!SetOption MeterSunset MeasureName MeasureSunset24][!UpdateMeter MeterSunset]
DynamicVariables=1
UpdateDivider=-1

[MeasureAutoLocation]
; Changes data flow depending on whether auto-location is turned on or not.
Measure=Calc
; 0: Auto-location off, 1: Auto-location on
IfCondition=(#AutoLocation#=0)
IfTrueAction=[!DisableMeasure MeasureZipCode][!SetOption MeasureWeather UpdateDivider #UpdateRate#]
IfFalseAction=[!EnableMeasure MeasureZipCode]
UpdateDivider=-1

[MeasureInternetConnectivity]
; Returns the status of the internet connection.
; Changes error text depending on situation.
Measure=Plugin
Plugin=SysInfo
SysInfoType=INTERNET_CONNECTIVITY
; -1: No Internet, 1: Connected
IfCondition=(MeasureInternetConnectivity=-1)
;IfTrueAction=[!Log "Lost Internet..."]
IfTrueAction=[!SetOption PreButtonText2 Text "Connect to internet and try again."]
;IfFalseAction=[!Log "Found Internet..."]
IfFalseAction=[!SetOption PreButtonText2 Text "Try again in a couple seconds."][!UpdateMeasure #FirstStep#]
;[!CommandMeasure #FirstStep# Update]

[MeasureZipCode]
; Returns Zip Code of current location (not the *most* accurate, but it's not bad).
; Success action: Sets WeatherURL for future use and initiates MeasureWeather.
; Failure action: Shows RefreshOverlay
Measure=Plugin
Plugin=WebParser.dll
URL=http://ipinfo.io/postal
;URL=file://#CURRENTPATH#test-zip.txt
RegExp=\d+
;OnUpdateAction=[!Log "Retrieving Zip Code..."]
;FinishAction=[!Log "Retrieved Zip Code."]
FinishAction=[!SetOption RefreshButton MouseLeaveAction "[]"][!UpdateMeter RefreshButton][!HideMeterGroup RefreshOverlay][!SetVariable WeatherURL "#WeatherURLpart1Zip#[MeasureZipCode]#WeatherURLpart2Zip##LocalLanguage#"][!UpdateMeasure MeasureWeather]
OnConnectErrorAction=[!HideMeterGroup WeatherMeters][!ShowMeter MeterRetrievingWeather][!SetOption RefreshButton MouseLeaveAction "[!HideMeter RefreshButtonHoverEdge]"][!UpdateMeter RefreshButton][!ShowMeterGroup RefreshOverlay][!HideMeter RefreshButtonHoverEdge]
OnRegExpErrorAction=[!HideMeterGroup WeatherMeters][!ShowMeter MeterRetrievingWeather][!SetOption RefreshButton MouseLeaveAction "[!HideMeter RefreshButtonHoverEdge]"][!UpdateMeter RefreshButton][!ShowMeterGroup RefreshOverlay][!HideMeter RefreshButtonHoverEdge]
UpdateDivider=#UpdateRate#
UpdateRate=1

[MeasureLocationWOEID]
; Checks to see if user-provided location is valid (i.e. has a corresponding WOEID). If location is valid, turns off auto-location and sets the WeatherURL.
Measure=Plugin
Plugin=WebParser.dll
URL=#WOEIDurl#
;URL=file://#CURRENTPATH#test-woeid.txt
; <loc id="USCA9326" type="1">Palmdale East, CA</loc></search>
RegExp=(?isU).*<loc id="(.*)".*">(.*)</
RegExpSubstitute=1
Substitute="^$":"USNY0996"
;OnUpdateAction=[!Log "Testing WOEID..."]
;FinishAction=[!Log "Good WOEID."]
StringIndex=1
FinishAction=[!WriteKeyValue Variables AutoLocation 0 #CoreFilePath#][!WriteKeyValue Variables FirstStep "MeasureWeather" #CoreFilePath#][!WriteKeyValue Variables WeatherURL "#WeatherURLpart1WOEID#[&MeasureLocationWOEID]#WeatherURLpart2WOEID##LocalLanguage#" #CoreFilePath#][!Refresh]

OnConnectErrorAction=[!HideMeterGroup WeatherMeters][!ShowMeter MeterRetrievingWeather][!SetOption RefreshButton MouseLeaveAction "[!HideMeter RefreshButtonHoverEdge]"][!UpdateMeter RefreshButton][!ShowMeterGroup RefreshOverlay][!HideMeter RefreshButtonHoverEdge]
;OnRegExpErrorAction=[!Log "Bad WOEID."]

OnRegExpErrorAction=[!HideMeter CheckingLocationText][!ShowMeter ErrorText]
DynamicVariables=1
UpdateDivider=-1
UpdateRate=1

[MeasureWeather]
; Returns current conditions and 5-day forecast.
Measure=Plugin
Plugin=WebParser.dll
URL=#WeatherURL#
;URL=file://#CURRENTPATH#test-Weather.txt
RegExp="(?siU)<ut>(.*)</ut>.*<ud>(.*)</ud>.*<us>(.*)</us>.*<up>(.*)</up>.*<ur>(.*)</ur>.*<lat>(.*)</lat>.*<lon>(.*)</lon>.*<zone>(.*)</zone>.*<lsup>(.*)</lsup>.*<obst>(.*)</obst>.*<tmp>(.*)</tmp>.*<flik>(.*)</flik>.*<t>(.*)</t>.*<icon>(.*)</icon>.*<r>(.*)</r>.*<d>(.*)</d>.*<s>(.*)</s>.*<gust>(.*)</gust>.*<d>(.*)</d>.*<t>(.*)</t>.*<hmid>(.*)</hmid>.*<vis.(.*)</vis>.*<i>(.*)</i>.*<t>(.*)</t>.*<dewp>(.*)</dewp>.*<icon>(.*)</icon>.*<t>(.*)</t>.*<dayf>.*<day d="0" t="(.*)" dt="(.*)">.*<hi>(.*)</hi>.*<low>(.*)</low>.*<sunr>(.*)</sunr>.*<suns>(.*)</suns>.*<part p="d">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<part p="n">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<day d="1" t="(.*)" dt="(.*)">.*<hi>(.*)</hi>.*<low>(.*)</low>.*<sunr>(.*)</sunr>.*<suns>(.*)</suns>.*<part p="d">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<part p="n">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<day d="2" t="(.*)" dt="(.*)">.*<hi>(.*)</hi>.*<low>(.*)</low>.*<sunr>(.*)</sunr>.*<suns>(.*)</suns>.*<part p="d">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<part p="n">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<day d="3" t="(.*)" dt="(.*)">.*<hi>(.*)</hi>.*<low>(.*)</low>.*<sunr>(.*)</sunr>.*<suns>(.*)</suns>.*<part p="d">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<part p="n">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<day d="4" t="(.*)" dt="(.*)">.*<hi>(.*)</hi>.*<low>(.*)</low>.*<sunr>(.*)</sunr>.*<suns>(.*)</suns>.*<part p="d">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<part p="n">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<day d="5" t="(.*)" dt="(.*)">.*<hi>(.*)</hi>.*<low>(.*)</low>.*<sunr>(.*)</sunr>.*<suns>(.*)</suns>.*<part p="d">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<part p="n">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*"
OnUpdateAction=[!Log "Retrieving weather..."]
FinishAction=[!Log "Retrieved weather."][!SetOption RefreshButton MouseLeaveAction "[]"][!UpdateMeter RefreshButton][!HideMeterGroup RefreshOverlay][!UpdateMeasureGroup WeatherMeasures][!ShowMeterGroup WeatherMeters][!UpdateMeterGroup WeatherMeters][!HideMeter MeterRetrievingWeather]
OnConnectErrorAction=[!HideMeterGroup WeatherMeters][!ShowMeter MeterRetrievingWeather][!SetOption RefreshButton MouseLeaveAction "[!HideMeter RefreshButtonHoverEdge]"][!UpdateMeter RefreshButton][!ShowMeterGroup RefreshOverlay][!HideMeter RefreshButtonHoverEdge]
OnRegExpErrorAction=[!HideMeterGroup WeatherMeters][!ShowMeter MeterRetrievingWeather][!SetOption RefreshButton MouseLeaveAction "[!HideMeter RefreshButtonHoverEdge]"][!UpdateMeter RefreshButton][!ShowMeterGroup RefreshOverlay][!HideMeter RefreshButtonHoverEdge]
DynamicVariables=1
UpdateDivider=-1
UpdateRate=1
ForceReload=1

[MeasureTimeWeather]
; Returns time in 12-hour format (omitting first 0 of hour).
Measure=Time
Format=%#I:%M %p
OnChangeAction=[!UpdateMeter MeterUpdatedTime]
Group=WeatherMeasures
UpdateDivider=-1

;[MeasureUpdatedTime]
;Measure=Plugin
;Plugin=WebParser.dll
;URL=[MeasureWeather]
;StringIndex=2
;RegExp=\d{1,2}:\d{2} (AM|PM)
;RegExpSubstitute=1
;Substitute="0(\d{1}):":"\1:"
;OnChangeAction=[!UpdateMeter MeterUpdatedTime]
;Group=WeatherMeasures
;UpdateDivider=-1

;[MeasureUpdatedDate]
;Measure=Plugin
;Plugin=WebParser.dll
;URL=[MeasureWeather]
;StringIndex=2
;RegExp=\d+ \D+ \d+
;RegExpSubstitute=1
;Substitute="(\d+) (\D+) (\d+)":"\2 \1, \3"
;OnChangeAction=[!UpdateMeter MeterUpdatedTime]
;Group=WeatherMeasures
;UpdateDivider=-1

[MeasureCity]
; Returns city.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=10
RegExpSubstitute=1
Substitute="^(.*), (.*), (.*)$":"\1"
OnChangeAction=[!UpdateMeter MeterLocation][!SetVariable Location "[MeasureCity],[MeasureRegion]"][!UpdateMeter LocationInputOverlay]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureRegion]
; Returns region (State if you're in the US).
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=10
RegExpSubstitute=1
Substitute="^(.*), (.*), (.*)$":"\2"
OnChangeAction=[!UpdateMeter MeterLocation][!SetVariable Location "[MeasureCity],[MeasureRegion]"][!UpdateMeter LocationInputOverlay]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureSunrise12]
; Returns time of sunrise in 12-hr time format.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=32
RegExpSubstitute=1
Substitute=":(\d{1}) ":":0\1 ","am":"AM","pm":"PM"
OnChangeAction=[!UpdateMeasure MeasureSunriseHour][!UpdateMeasure MeasureSunriseMinute][!UpdateMeasure MeasureSunriseAMPM][!UpdateMeter MeterSunrise]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureSunriseHour]
; Returns hour of sunrise in 12-hr time format.
Measure=String
String=[MeasureSunrise12]
RegExpSubstitute=1
Substitute="(\d{1,2}):.*":"\1"
OnChangeAction=[!UpdateMeasure MeasureSunriseHour24][!UpdateMeasure MeasureSunrise24]
DynamicVariables=1
UpdateDivider=-1

[MeasureSunriseMinute]
; Returns minute of sunrise.
Measure=String
String=[MeasureSunrise12]
RegExpSubstitute=1
Substitute="\d{1,2}(:\d{2}).*":"\1"
OnChangeAction=[!UpdateMeasure MeasureSunrise24]
DynamicVariables=1
UpdateDivider=-1

[MeasureSunriseAMPM]
; Returns AM/PM status of sunrise.
Measure=String
String=[MeasureSunrise12]
RegExpSubstitute=1
Substitute="\d{1,2}:\d{2} (.*)":"\1","AM":"0","PM":"1","??":"0","??":"1","??":"0","??":"1","":"0"
OnChangeAction=[!UpdateMeasure MeasureSunriseHour24]
DynamicVariables=1
UpdateDivider=-1

[MeasureSunriseHour24]
; Returns hour of sunrise in 24-hr time format.
Measure=Calc
Formula=([MeasureSunriseAMPM] = 0 ? MeasureSunriseHour : (MeasureSunriseHour+12))
OnChangeAction=[!UpdateMeasure MeasureSunrise24]
DynamicVariables=1
UpdateDivider=-1

[MeasureSunrise24]
; Returns time of sunrise in 24-hr time format.
Measure=String
String=[MeasureSunriseHour24][MeasureSunriseMinute]
OnChangeAction=[!UpdateMeter MeterSunrise]
DynamicVariables=1
UpdateDivider=-1

[MeasureSunset12]
; Returns time of sunset in 12-hr time format.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=33
RegExpSubstitute=1
Substitute=":(\d{1}) ":":0\1 ","am":"AM","pm":"PM"
OnChangeAction=[!UpdateMeasure MeasureSunsetHour][!UpdateMeasure MeasureSunsetMinute][!UpdateMeasure MeasureSunsetAMPM][!UpdateMeter MeterSunset]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureSunsetHour]
; Returns hour of sunset in 12-hr time format.
Measure=String
String=[MeasureSunset12]
RegExpSubstitute=1
Substitute="(\d{1,2}):.*":"\1"
OnChangeAction=[!UpdateMeasure MeasureSunsetHour24][!UpdateMeasure MeasureSunset24]
DynamicVariables=1
UpdateDivider=-1

[MeasureSunsetMinute]
; Returns minute of sunset.
Measure=String
String=[MeasureSunset12]
RegExpSubstitute=1
Substitute="\d{1,2}(:\d{2}).*":"\1"
OnChangeAction=[!UpdateMeasure MeasureSunset24]
DynamicVariables=1
UpdateDivider=-1

[MeasureSunsetAMPM]
; Returns AM/PM status of sunset.
Measure=String
String=[MeasureSunset12]
RegExpSubstitute=1
Substitute="\d{1,2}:\d{2} (.*)":"\1","AM":"0","PM":"1","??":"0","??":"1","??":"0","??":"1","":"0"
OnChangeAction=[!UpdateMeasure MeasureSunsetHour24]
DynamicVariables=1
UpdateDivider=-1

[MeasureSunsetHour24]
; Returns hour of sunset in 24-hr time format.
Measure=Calc
Formula=([MeasureSunsetAMPM] = 0 ? MeasureSunsetHour : (MeasureSunsetHour+12))
OnChangeAction=[!UpdateMeasure MeasureSunset24]
DynamicVariables=1
UpdateDivider=-1

[MeasureSunset24]
; Returns time of sunset in 24-hr time format.
Measure=String
String=[MeasureSunsetHour24][MeasureSunsetMinute]
OnChangeAction=[!UpdateMeter MeterSunset]
DynamicVariables=1
UpdateDivider=-1

[MeasureForecastText]
; Returns text reflecting the current condition (e.g. "Mostly Sunny").
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=13
OnChangeAction=[!UpdateMeter MeterForecastText]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureImageCode]
; Returns icon code for the image of the current condition.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=14
Substitute="":"3200"
OnChangeAction=[!UpdateMeter MeterForecastImage]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureTemp]
; Returns current temperature.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=11
OnChangeAction=[!UpdateMeasure MeasureTempF][!UpdateMeasure MeasureTempC]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureTempF]
; Returns current temperature in Fahrenheit.
Measure=Calc
Formula=Round(MeasureTemp,0)
OnChangeAction=[!UpdateMeter MeterTemp]
UpdateDivider=-1

[MeasureTempC]
; Returns current temperature in Celsius.
Measure=Calc
Formula=Round(((MeasureTemp-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterTemp]
UpdateDivider=-1

[MeasureDay1]
; Returns abbreviated name of day 1 (e.g. Mon).
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=28
Substitute="Sunday":"#Sun#","Monday":"#Mon#","Tuesday":"#Tue#","Wednesday":"#Wed#","Thursday":"#Thu#","Friday":"#Fri#","Saturday":"#Sat#"
OnChangeAction=[!UpdateMeter MeterDay1]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureDay1Low]
; Returns forecasted low temperature for day 1.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=31
OnChangeAction=[!UpdateMeasure MeasureDay1LowF][!UpdateMeasure MeasureDay1LowC]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureDay1LowF]
; Returns forecasted low temperature for day 1 in Fahrenheit.
Measure=Calc
Formula=Round(MeasureDay1Low,0)
OnChangeAction=[!UpdateMeter MeterDay1Low]
UpdateDivider=-1

[MeasureDay1LowC]
; Returns forecasted low temperature for day 1 in Celsius.
Measure=Calc
Formula=Round(((MeasureDay1Low-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterDay1Low]
UpdateDivider=-1

[MeasureDay1High]
; Returns forecasted high temperature for day 1.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=30
OnChangeAction=[!UpdateMeasure MeasureDay1HighF][!UpdateMeasure MeasureDay1HighC]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureDay1HighF]
; Returns forecasted high temperature for day 1 in Fahrenheit.
Measure=Calc
Formula=Round(MeasureDay1High,0)
OnChangeAction=[!UpdateMeter MeterDay1High]
UpdateDivider=-1

[MeasureDay1HighC]
; Returns forecasted high temperature for day 1 in Celsius.
Measure=Calc
Formula=Round(((MeasureDay1High-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterDay1High]
UpdateDivider=-1

[MeasureDay1Code]
; Returns icon code for the image of the forecasted condition for day 1.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=34
Substitute="":"[&MeasureDay1CodeN]"
;"3200"
OnChangeAction=[!UpdateMeter MeterDay1Image]
Group=WeatherMeasures
UpdateDivider=-1
DynamicVariables=1

[MeasureDay1CodeN]
; Returns icon code for the image of the forecasted condition for day 1.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=36
Substitute="":"3200"
OnChangeAction=[!UpdateMeter MeterDay1Image]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureDay2]
; Returns abbreviated name of day 2 (e.g. Tue).
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=38
Substitute="Sunday":"#Sun#","Monday":"#Mon#","Tuesday":"#Tue#","Wednesday":"#Wed#","Thursday":"#Thu#","Friday":"#Fri#","Saturday":"#Sat#"
OnChangeAction=[!UpdateMeter MeterDay2]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureDay2High]
; Returns forecasted high temperature for day 2.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=40
OnChangeAction=[!UpdateMeasure MeasureDay2HighF][!UpdateMeasure MeasureDay2HighC]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureDay2Low]
; Returns forecasted low temperature for day 2.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=44
OnChangeAction=[!UpdateMeasure MeasureDay2LowF][!UpdateMeasure MeasureDay2LowC]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureDay2HighF]
; Returns forecasted high temperature for day 2 in Fahrenheit.
Measure=Calc
Formula=Round(MeasureDay2High,0)
OnChangeAction=[!UpdateMeter MeterDay2High]
UpdateDivider=-1

[MeasureDay2HighC]
; Returns forecasted high temperature for day 2 in Celsius.
Measure=Calc
Formula=Round(((MeasureDay2High-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterDay2High]
UpdateDivider=-1

[MeasureDay2LowF]
; Returns forecasted low temperature for day 2 in Fahrenheit.
Measure=Calc
Formula=Round(MeasureDay2Low,0)
OnChangeAction=[!UpdateMeter MeterDay2Low]
UpdateDivider=-1

[MeasureDay2LowC]
; Returns forecasted low temperature for day 2 in Celsius.
Measure=Calc
Formula=Round(((MeasureDay2Low-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterDay2Low]
UpdateDivider=-1

[MeasureDay2Code]
; Returns icon code for the image of the forecasted condition for day 2.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=44
Substitute="":"3200"
OnChangeAction=[!UpdateMeter MeterDay2Image]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureDay3]
; Returns abbreviated name of day 3 (e.g. Wed).
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=48
Substitute="Sunday":"#Sun#","Monday":"#Mon#","Tuesday":"#Tue#","Wednesday":"#Wed#","Thursday":"#Thu#","Friday":"#Fri#","Saturday":"#Sat#"
OnChangeAction=[!UpdateMeter MeterDay3]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureDay3High]
; Returns forecasted high temperature for day 3.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=50
OnChangeAction=[!UpdateMeasure MeasureDay3HighF][!UpdateMeasure MeasureDay3HighC]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureDay3Low]
; Returns forecasted low temperature for day 3.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=51
OnChangeAction=[!UpdateMeasure MeasureDay3LowF][!UpdateMeasure MeasureDay3LowC]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureDay3HighF]
; Returns forecasted high temperature for day 3 in Fahrenheit.
Measure=Calc
Formula=Round(MeasureDay3High,0)
OnChangeAction=[!UpdateMeter MeterDay3High]
UpdateDivider=-1

[MeasureDay3HighC]
; Returns forecasted high temperature for day 3 in Celsius.
Measure=Calc
Formula=Round(((MeasureDay3High-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterDay3High]
UpdateDivider=-1

[MeasureDay3LowF]
; Returns forecasted low temperature for day 3 in Fahrenheit.
Measure=Calc
Formula=Round(MeasureDay3Low,0)
OnChangeAction=[!UpdateMeter MeterDay3Low]
UpdateDivider=-1

[MeasureDay3LowC]
; Returns forecasted low temperature for day 3 in Celsius.
Measure=Calc
Formula=Round(((MeasureDay3Low-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterDay3Low]
UpdateDivider=-1

[MeasureDay3Code]
; Returns icon code for the image of the forecasted condition for day 3.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=54
Substitute="":"3200"
OnChangeAction=[!UpdateMeter MeterDay3Image]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureDay4]
; Returns abbreviated name of day 4 (e.g. Thu).
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=58
Substitute="Sunday":"#Sun#","Monday":"#Mon#","Tuesday":"#Tue#","Wednesday":"#Wed#","Thursday":"#Thu#","Friday":"#Fri#","Saturday":"#Sat#"
OnChangeAction=[!UpdateMeter MeterDay4]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureDay4High]
; Returns forecasted high temperature for day 4.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=60
OnChangeAction=[!UpdateMeasure MeasureDay4HighF][!UpdateMeasure MeasureDay4HighC]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureDay4Low]
; Returns forecasted low temperature for day 4.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=61
OnChangeAction=[!UpdateMeasure MeasureDay4LowF][!UpdateMeasure MeasureDay4LowC]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureDay4HighF]
; Returns forecasted high temperature for day 4 in Fahrenheit.
Measure=Calc
Formula=Round(MeasureDay4High,0)
OnChangeAction=[!UpdateMeter MeterDay4High]
UpdateDivider=-1

[MeasureDay4HighC]
; Returns forecasted high temperature for day 4 in Celsius.
Measure=Calc
Formula=Round(((MeasureDay4High-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterDay4High]
UpdateDivider=-1

[MeasureDay4LowF]
; Returns forecasted low temperature for day 4 in Fahrenheit.
Measure=Calc
Formula=Round(MeasureDay4Low,0)
OnChangeAction=[!UpdateMeter MeterDay4Low]
UpdateDivider=-1

[MeasureDay4LowC]
; Returns forecasted low temperature for day 4 in Celsius.
Measure=Calc
Formula=Round(((MeasureDay4Low-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterDay4Low]
UpdateDivider=-1

[MeasureDay4Code]
; Returns icon code for the image of the forecasted condition for day 4.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=64
Substitute="":"3200"
OnChangeAction=[!UpdateMeter MeterDay4Image]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureDay5]
; Returns abbreviated name of day 5 (e.g. Fri).
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=68
Substitute="Sunday":"#Sun#","Monday":"#Mon#","Tuesday":"#Tue#","Wednesday":"#Wed#","Thursday":"#Thu#","Friday":"#Fri#","Saturday":"#Sat#"
OnChangeAction=[!UpdateMeter MeterDay5]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureDay5High]
; Returns forecasted high temperature for day 5.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=70
OnChangeAction=[!UpdateMeasure MeasureDay5HighF][!UpdateMeasure MeasureDay5HighC]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureDay5Low]
; Returns forecasted low temperature for day 5.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=71
OnChangeAction=[!UpdateMeasure MeasureDay5LowF][!UpdateMeasure MeasureDay5LowC]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureDay5HighF]
; Returns forecasted high temperature for day 5 in Fahrenheit.
Measure=Calc
Formula=Round(MeasureDay5High,0)
OnChangeAction=[!UpdateMeter MeterDay5High]
UpdateDivider=-1

[MeasureDay5HighC]
; Returns forecasted high temperature for day 5 in Celsius.
Measure=Calc
Formula=Round(((MeasureDay5High-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterDay5High]
UpdateDivider=-1

[MeasureDay5LowF]
; Returns forecasted low temperature for day 5 in Fahrenheit.
Measure=Calc
Formula=Round(MeasureDay5Low,0)
OnChangeAction=[!UpdateMeter MeterDay5Low]
UpdateDivider=-1

[MeasureDay5LowC]
; Returns forecasted low temperature for day 5 in Celsius.
Measure=Calc
Formula=Round(((MeasureDay5Low-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterDay5Low]
UpdateDivider=-1

[MeasureDay5Code]
; Returns icon code for the image of the forecasted condition for day 5.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=74
Substitute="":"3200"
OnChangeAction=[!UpdateMeter MeterDay5Image]
Group=WeatherMeasures
UpdateDivider=-1

[MeasureLocationInput]
; Accepts user input for location and initiates the location confirmation process when input is confirmed (i.e. when "enter" is pressed). 
Measure=Plugin
Plugin=InputText
Command1=[!HideMeter LocationInputBorder][!SetOption MeasureLocationInput DefaultValue "$UserInput$"][!SetOption LocationInputOverlay Text "[MeasureLocationInput]"][!UpdateMeter LocationInputOverlay][!SetVariable WOEIDurl "#WOEIDurlPart1#[MeasureLocationInput]#WOEIDurlPart2#"][!HideMeter ErrorText][!ShowMeter CheckingLocationText][!UpdateMeasure MeasureLocationWOEID]
DefaultValue=#Location#
X=([LocationInputOverlayBorder:X]+2)
Y=([LocationInputOverlayBorder:Y]+2)
W=([LocationInputOverlayBorder:W]-4)
H=([LocationInputOverlayBorder:H]-4)
SolidColor=#SolidWhite#
FontColor=#SolidBlack#
FontFace=Segoe UI
FontSize=11
StringAlign=Left
OnDismissAction=[!HideMeter LocationInputBorder]
AntiAlias=1
DynamicVariables=1
UpdateDivider=-1